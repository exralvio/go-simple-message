// Code generated by MockGen. DO NOT EDIT.
// Source: repositories/message_repository.go

// Package mock_repositories is a generated GoMock package.
package mock_repositories

import (
	models "github.com/exralvio/go-simple-message/models"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockMessageRepositoryInterface is a mock of MessageRepositoryInterface interface
type MockMessageRepositoryInterface struct {
	ctrl     *gomock.Controller
	recorder *MockMessageRepositoryInterfaceMockRecorder
}

// MockMessageRepositoryInterfaceMockRecorder is the mock recorder for MockMessageRepositoryInterface
type MockMessageRepositoryInterfaceMockRecorder struct {
	mock *MockMessageRepositoryInterface
}

// NewMockMessageRepositoryInterface creates a new mock instance
func NewMockMessageRepositoryInterface(ctrl *gomock.Controller) *MockMessageRepositoryInterface {
	mock := &MockMessageRepositoryInterface{ctrl: ctrl}
	mock.recorder = &MockMessageRepositoryInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockMessageRepositoryInterface) EXPECT() *MockMessageRepositoryInterfaceMockRecorder {
	return m.recorder
}

// GetAll mocks base method
func (m *MockMessageRepositoryInterface) GetAll() ([]models.Message, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll")
	ret0, _ := ret[0].([]models.Message)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAll indicates an expected call of GetAll
func (mr *MockMessageRepositoryInterfaceMockRecorder) GetAll() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockMessageRepositoryInterface)(nil).GetAll))
}

// Save mocks base method
func (m *MockMessageRepositoryInterface) Save(data models.Message) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", data)
	ret0, _ := ret[0].(error)
	return ret0
}

// Save indicates an expected call of Save
func (mr *MockMessageRepositoryInterfaceMockRecorder) Save(data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockMessageRepositoryInterface)(nil).Save), data)
}
